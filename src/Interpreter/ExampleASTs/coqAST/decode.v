From CoreErlang Require Import Syntax.
Import ListNotations.


Definition testdecode := ELetRec [(1, (EExp (ECase (VVal (VVar 17)) [([PNil], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECons (VVal (VLit (Integer (89)))) (EExp (ECons (VVal (VLit (Integer (128)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (8)))) (EExp (ECons (VVal (VLit (Integer (132)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (26)))) (EExp (ECons (VVal (VLit (Integer (133)))) (EExp (ECons (VVal (VLit (Integer (133)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (38)))) (EExp (ECons (VVal (VLit (Integer (148)))) (EExp (ECons (VVal (VLit (Integer (94)))) (EExp (ECons (VVal (VLit (Integer (128)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (2)))) (EExp (ECons (VVal (VLit (Integer (129)))) (EExp (ECons (VVal (VLit (Integer (128)))) (EExp (ECons (VVal (VLit (Integer (92)))) (EExp (ECons (VVal (VLit (Integer (128)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (2)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (112)))) (EExp (ECons (VVal (VLit (Integer (128)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (10)))) (EExp (ECons (VVal (VLit (Integer (194)))) (EExp (ECons (VVal (VLit (Integer (69)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (18)))) (EExp (ECons (VVal (VLit (Integer (52)))) (EExp (ECons (VVal (VLit (Integer (95)))) (VVal VNil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (89)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (128)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (8)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (132)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (26)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (133)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (133)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (38)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (148)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (94)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (128)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (2)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (129)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (128)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (92)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (128)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (2)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (112)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (128)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (10)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (194)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (69)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (0)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (18)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (52)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VLit (Integer (95)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "list_to_binary"%string))) [(EExp (ECons (VVal (VVar 37)) (EExp (ECons (VVal (VVar 36)) (EExp (ECons (VVal (VVar 35)) (EExp (ECons (VVal (VVar 34)) (EExp (ECons (VVal (VVar 33)) (EExp (ECons (VVal (VVar 32)) (EExp (ECons (VVal (VVar 31)) (EExp (ECons (VVal (VVar 30)) (EExp (ECons (VVal (VVar 29)) (EExp (ECons (VVal (VVar 28)) (EExp (ECons (VVal (VVar 27)) (EExp (ECons (VVal (VVar 26)) (EExp (ECons (VVal (VVar 25)) (EExp (ECons (VVal (VVar 24)) (EExp (ECons (VVal (VVar 23)) (EExp (ECons (VVal (VVar 22)) (EExp (ECons (VVal (VVar 21)) (EExp (ECons (VVal (VVar 20)) (EExp (ECons (VVal (VVar 19)) (EExp (ECons (VVal (VVar 18)) (EExp (ECons (VVal (VVar 17)) (EExp (ECons (VVal (VVar 16)) (EExp (ECons (VVal (VVar 15)) (EExp (ECons (VVal (VVar 14)) (EExp (ECons (VVal (VVar 13)) (EExp (ECons (VVal (VVar 12)) (EExp (ECons (VVal (VVar 11)) (EExp (ECons (VVal (VVar 10)) (EExp (ECons (VVal (VVar 9)) (EExp (ECons (VVal (VVar 8)) (EExp (ECons (VVal (VVar 7)) (EExp (ECons (VVal (VVar 6)) (EExp (ECons (VVal (VVar 5)) (EExp (ECons (VVal (VVar 4)) (EExp (ECons (VVal (VVar 3)) (EExp (ECons (VVal (VVar 2)) (EExp (ECons (VVal (VVar 1)) (EExp (ECons (VVal (VVar 0)) (VVal VNil)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))])) (EExp (EApp (VVal (VFunId (42, 3))) [(VVal (VLit (Integer (500000))));(VVal (VLit (Integer (0))));(VVal (VVar 0))])))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "hipe"%string))) (VVal (VLit (Atom "c"%string))) [(VVal (VLit (Atom "decode"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19))])) [([(PLit (Integer (0)));PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "decode"%string))) (VVal (VLit (Atom "decode_ie_heads_setup"%string))) [(VVal (VVar 3))])) (EExp (EApp (VVal (VFunId (7, 3))) [(VVal (VVar 1));(VVal (VVar 0));(VVal (VVar 4))])))))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18))])) [([(PLit (Integer (0)));PVar], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "done"%string))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EApp (VVal (VFunId (6, 1))) [(VVal (VVar 1))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 0));(VVal (VVar 2))])))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "true"%string))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18))])) [([(PLit (Integer (0)));PVar], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "done"%string))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (ECall (VVal (VLit (Atom "decode"%string))) (VVal (VLit (Atom "decode_ie_heads_setup"%string))) [(VVal (VVar 1))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VVar 0));(VVal (VVar 2))])))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (8, 5))) [(VVal (VVar 0));(VVal (VLit (Atom "no_bbc_ie"%string)));(VVal (VLit (Atom "no_epr"%string)));(VVal VNil);(VVal (VLit (Atom "no_brep"%string)))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(5, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19));(VVal (VVar 20));(VVal (VVar 21))])) [([PVar;PVar;PVar;PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_binary"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "size"%string))) [(VVal (VVar 1))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom ">="%string))) [(VVal (VVar 0));(VVal (VLit (Integer (4))))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 2));(VVal (VVar 0))])))))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "split_binary"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (4))))])) [([(PTuple [PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "binary_to_list"%string))) [(VVal (VVar 0))])) [([(PCons PVar (PCons PVar (PCons PVar (PCons PVar PNil))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (19, 1))) [(VVal (VVar 1))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (21, 1))) [(VVal (VVar 2))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "*"%string))) [(VVal (VLit (Integer (256))));(VVal (VVar 4))])) (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VVar 6))])) [([PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom ">"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])), (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "c_catch"%string)));(VVal VNil);(EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "split_binary"%string))) [(VVal (VVar 9));(VVal (VVar 0))]))])) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "EXIT"%string));PVar])], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (24, 5))) [(VVal (VLit (Atom "not_a_binary"%string)));(VVal (VVar 13));(VVal (VVar 14));(VVal (VVar 15));(VVal (VVar 16))])));([(PTuple [PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "ie"%string)));(VVal (VVar 7));(VVal (VVar 5));(VVal (VVar 6));(VVal (VVar 3));(VVal (VVar 0))])) (EExp (ECase (VVal (VVar 8)) [([(PLit (Integer (94)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "scct_bbc"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Atom "undefined"%string)))])) (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "c_catch"%string)));(VVal VNil);(EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "binary_to_list"%string))) [(VVal (VVar 2))])) (EExp (EApp (VVal (VFunId (31, 2))) [(VVal (VVar 1));(VVal (VVar 0))]))))])) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "EXIT"%string));PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "scct_cause"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Integer (2))));(VVal (VLit (Integer (100))));(EExp (ECons (VVal (VLit (Integer (94)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "release_complete_uni"%string)));(EExp (ECons (VVal (VVar 0)) (VVal VNil)));(VVal VNil)])) (EExp (ETuple [(VVal (VLit (Atom "error_throw_relcomp"%string)));(VVal (VVar 0))])))))));([(PTuple [(PLit (Atom "c_alias"%string));PNil;PVar;(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])])], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (VVal (VVar 3)));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 0))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (35, 5))) [(VVal (VVar 11));(VVal (VLit (Integer (0))));(VVal (VVar 25));(EExp (ECons (VVal (VVar 9)) (VVal (VVar 26))));(VVal (VVar 27))])));([(PLit (Integer (1)))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (35, 5))) [(VVal (VVar 11));(VVal (VLit (Integer (1))));(VVal (VVar 25));(EExp (ECons (VVal (VVar 9)) (VVal (VVar 26))));(VVal (VVar 27))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))))));([(PLit (Integer (84)))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (26, 5))) [(VVal (VVar 2));(VVal (VVar 15));(VVal (VLit (Atom "yes_epr"%string)));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 17))));(VVal (VVar 18))])));([(PLit (Integer (99)))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (26, 5))) [(VVal (VVar 2));(VVal (VVar 15));(VVal (VVar 16));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 17))));(VVal (VLit (Atom "yes_brep"%string)))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (27, 5))) [(VVal (VVar 3));(VVal (VVar 16));(VVal (VVar 17));(EExp (ECons (VVal (VVar 1)) (VVal (VVar 18))));(VVal (VVar 19))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "=:="%string))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])), (EExp (EApp (VVal (VFunId (22, 5))) [(VVal (VVar 9));(VVal (VVar 11));(VVal (VVar 12));(VVal (VVar 13));(VVal (VVar 14))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badmatch"%string)));(VVal (VVar 0))]))])))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badmatch"%string)));(VVal (VVar 0))]))])))])));([PVar;(PLit (Integer (1)));(PLit (Atom "yes_epr"%string));PVar;(PLit (Atom "no_brep"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ETuple [(VVal (VLit (Integer (1))));(VVal (VVar 1))])));([PVar;(PLit (Integer (1)));(PLit (Atom "yes_epr"%string));PVar;(PLit (Atom "yes_brep"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (15, 1))) [(VVal (VVar 1))])) (EExp (ETuple [(VVal (VLit (Integer (1))));(VVal (VVar 0))])))));([PVar;(PLit (Integer (1)));(PLit (Atom "no_epr"%string));PVar;(PLit (Atom "no_brep"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "scct_cause"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Integer (2))));(VVal (VLit (Integer (96))));(EExp (ECons (VVal (VLit (Integer (84)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "release_complete_uni"%string)));(EExp (ECons (VVal (VVar 0)) (VVal VNil)));(VVal VNil)])) (EExp (ETuple [(VVal (VLit (Atom "error_throw_relcomp"%string)));(VVal (VVar 0))])))))));([PVar;(PLit (Integer (0)));PVar;PVar;(PLit (Atom "no_brep"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ETuple [(VVal (VLit (Integer (0))));(VVal (VVar 2))])));([PVar;(PLit (Integer (0)));PVar;PVar;(PLit (Atom "yes_brep"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (16, 1))) [(VVal (VVar 2))])) (EExp (ETuple [(VVal (VLit (Integer (0))));(VVal (VVar 0))])))));([PVar;(PLit (Atom "no_bbc_ie"%string));PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "scct_cause"%string)));(VVal (VLit (Atom "undefined"%string)));(VVal (VLit (Integer (2))));(VVal (VLit (Integer (96))));(EExp (ECons (VVal (VLit (Integer (94)))) (VVal VNil)))])) (EExp (ELet 1 (EExp (ETuple [(VVal (VLit (Atom "release_complete_uni"%string)));(EExp (ECons (VVal (VVar 0)) (VVal VNil)));(VVal VNil)])) (EExp (ETuple [(VVal (VLit (Atom "error_throw_relcomp"%string)));(VVal (VVar 0))])))))));([PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 4))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECase (EExp (EValues [])) [([], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (16))))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "=:="%string))) [(VVal (VVar 0));(VVal (VLit (Integer (16))))])))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (VVal (VLit (Atom "true"%string))));([], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "false"%string))));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(VVal (VLit (Atom "if_clause"%string)))])))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (3))))])) [([(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "clear_call"%string))));([(PLit (Integer (1)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "discard_proceed"%string))));([(PLit (Integer (2)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "discard_proceed_status"%string))));([PVar], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "undefined"%string))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "ignore"%string))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (96))))])) [([(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "itu_t_standard"%string))));([(PLit (Integer (96)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "atm_forum_specific"%string))));([PVar], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "undefined"%string))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;(PCons PVar PVar)], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (31))))])) [([(PLit (Integer (1)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 5));(VVal (VLit (Integer (1))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (3)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 5));(VVal (VLit (Integer (3))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (16)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 5));(VVal (VLit (Integer (16))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (24)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 5));(VVal (VLit (Integer (24))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])) (EExp (ELet 1 (VVal (VVar 0)) (EExp (ELet 1 (EExp (ECase (EExp (EValues [])) [([], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 3));(VVal (VLit (Integer (128))))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "=:="%string))) [(VVal (VVar 0));(VVal (VLit (Integer (128))))])))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (VVal (VLit (Atom "false"%string))));([], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "true"%string))));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(VVal (VLit (Atom "if_clause"%string)))])))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (17, 2))) [(VVal (VVar 1));(VVal (VVar 5))])));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (18, 2))) [(VVal (VVar 1));(VVal (VVar 5))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;(PCons PVar PVar)], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (127))))])) [([(PLit (Integer (5)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (5))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (7)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (7))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (9)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (9))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (19)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (19))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (10)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (10))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (11)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (11))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([(PLit (Integer (12)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (VVal (VVar 0)) (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 5));(VVal (VLit (Integer (12))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])) (EExp (ELet 1 (VVal (VVar 0)) (EExp (EApp (VVal (VFunId (17, 2))) [(VVal (VVar 0));(VVal (VVar 4))])))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;(PCons PVar PNil)], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "bsr"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (5))))])) (EExp (ELet 1 (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (3))))])) [([(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Integer (0)))));([(PLit (Integer (1)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Integer (1)))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])) (EExp (ELet 1 (VVal (VVar 0)) (EExp (ELet 1 (EExp (ECase (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "band"%string))) [(VVal (VVar 4));(VVal (VLit (Integer (3))))])) [([(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Integer (0)))));([(PLit (Integer (1)))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Integer (1)))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])) (EExp (ELet 1 (VVal (VVar 0)) (EExp (ELet 1 (VVal (VVar 5)) (EExp (ELet 1 (EExp (ECase (VVal (VVar 0)) [([(PTuple [(PLit (Atom "scct_bbc"%string));PVar;PVar;PVar;PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (6))));(VVal (VVar 5));(VVal (VVar 8))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "setelement"%string))) [(VVal (VLit (Integer (5))));(VVal (VVar 0));(VVal (VVar 7))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badrecord"%string)));(VVal (VVar 1))]))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "case_clause"%string)));(VVal (VVar 0))]))])))])) (EExp (ELet 1 (VVal (VVar 0)) (VVal (VVar 0)))))))))))))))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (15, 2))) [(VVal (VVar 0));(VVal VNil)])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 17));(VVal (VVar 18))])) [([(PCons PVar PVar);PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (17, 2))) [(VVal (VVar 1));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 2))))])));([PNil;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "decode"%string)))])));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(1, (EExp (ECase (VVal (VVar 17)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "decode"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))] (EApp (VVal (VFunId (0, 1))) [VVal VNil]).


