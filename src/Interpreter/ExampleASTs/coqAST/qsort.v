From CoreErlang Require Import Syntax.
Import ListNotations.


Definition testqsort := ELetRec [(1, (EExp (ECase (VVal (VVar 8)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (2, 2))) [(VVal (VVar 0));(VVal VNil)])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 8));(VVal (VVar 9))])) [([(PCons PVar PVar);PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (5, 5))) [(VVal (VVar 0));(VVal (VVar 1));(VVal VNil);(VVal VNil);(VVal (VVar 2))])));([PNil;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(5, (EExp (ECase (EExp (EValues [(VVal (VVar 8));(VVal (VVar 9));(VVal (VVar 10));(VVal (VVar 11));(VVal (VVar 12))])) [([PVar;(PCons PVar PVar);PVar;PVar;PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "<"%string))) [(VVal (VVar 1));(VVal (VVar 0))])), (EExp (EApp (VVal (VFunId (8, 5))) [(VVal (VVar 0));(VVal (VVar 2));(EExp (ECons (VVal (VVar 1)) (VVal (VVar 3))));(VVal (VVar 4));(VVal (VVar 5))])));([PVar;(PCons PVar PVar);PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (8, 5))) [(VVal (VVar 0));(VVal (VVar 2));(VVal (VVar 3));(EExp (ECons (VVal (VVar 1)) (VVal (VVar 4))));(VVal (VVar 5))])));([PVar;PNil;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (5, 2))) [(VVal (VVar 2));(VVal (VVar 3))])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 2));(EExp (ECons (VVal (VVar 1)) (VVal (VVar 0))))])))));([PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 4))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 8));(VVal (VVar 9));(VVal (VVar 10))])) [([(PLit (Integer (0)));PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 1)));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (4, 1))) [(VVal (VVar 2))])) (EExp (EApp (VVal (VFunId (8, 3))) [(VVal (VVar 1));(VVal (VVar 3));(VVal (VVar 0))])))))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(1, (EExp (ECase (VVal (VVar 8)) [([PNil], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECons (VVal (VLit (Integer (27)))) (EExp (ECons (VVal (VLit (Integer (74)))) (EExp (ECons (VVal (VLit (Integer (17)))) (EExp (ECons (VVal (VLit (Integer (33)))) (EExp (ECons (VVal (VLit (Integer (94)))) (EExp (ECons (VVal (VLit (Integer (18)))) (EExp (ECons (VVal (VLit (Integer (46)))) (EExp (ECons (VVal (VLit (Integer (83)))) (EExp (ECons (VVal (VLit (Integer (65)))) (EExp (ECons (VVal (VLit (Integer (2)))) (EExp (ECons (VVal (VLit (Integer (32)))) (EExp (ECons (VVal (VLit (Integer (53)))) (EExp (ECons (VVal (VLit (Integer (28)))) (EExp (ECons (VVal (VLit (Integer (85)))) (EExp (ECons (VVal (VLit (Integer (99)))) (EExp (ECons (VVal (VLit (Integer (47)))) (EExp (ECons (VVal (VLit (Integer (28)))) (EExp (ECons (VVal (VLit (Integer (82)))) (EExp (ECons (VVal (VLit (Integer (6)))) (EExp (ECons (VVal (VLit (Integer (11)))) (EExp (ECons (VVal (VLit (Integer (55)))) (EExp (ECons (VVal (VLit (Integer (29)))) (EExp (ECons (VVal (VLit (Integer (39)))) (EExp (ECons (VVal (VLit (Integer (81)))) (EExp (ECons (VVal (VLit (Integer (90)))) (EExp (ECons (VVal (VLit (Integer (37)))) (EExp (ECons (VVal (VLit (Integer (10)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (66)))) (EExp (ECons (VVal (VLit (Integer (51)))) (EExp (ECons (VVal (VLit (Integer (7)))) (EExp (ECons (VVal (VLit (Integer (21)))) (EExp (ECons (VVal (VLit (Integer (85)))) (EExp (ECons (VVal (VLit (Integer (27)))) (EExp (ECons (VVal (VLit (Integer (31)))) (EExp (ECons (VVal (VLit (Integer (63)))) (EExp (ECons (VVal (VLit (Integer (75)))) (EExp (ECons (VVal (VLit (Integer (4)))) (EExp (ECons (VVal (VLit (Integer (95)))) (EExp (ECons (VVal (VLit (Integer (99)))) (EExp (ECons (VVal (VLit (Integer (55)))) (EExp (ECons (VVal (VLit (Integer (29)))) (EExp (ECons (VVal (VLit (Integer (39)))) (EExp (ECons (VVal (VLit (Integer (81)))) (EExp (ECons (VVal (VLit (Integer (90)))) (EExp (ECons (VVal (VLit (Integer (37)))) (EExp (ECons (VVal (VLit (Integer (10)))) (EExp (ECons (VVal (VLit (Integer (0)))) (EExp (ECons (VVal (VLit (Integer (66)))) (EExp (ECons (VVal (VLit (Integer (51)))) (EExp (ECons (VVal (VLit (Integer (7)))) (EExp (ECons (VVal (VLit (Integer (21)))) (EExp (ECons (VVal (VLit (Integer (85)))) (EExp (ECons (VVal (VLit (Integer (27)))) (EExp (ECons (VVal (VLit (Integer (31)))) (EExp (ECons (VVal (VLit (Integer (63)))) (EExp (ECons (VVal (VLit (Integer (75)))) (EExp (ECons (VVal (VLit (Integer (4)))) (EExp (ECons (VVal (VLit (Integer (95)))) (EExp (ECons (VVal (VLit (Integer (99)))) (EExp (ECons (VVal (VLit (Integer (11)))) (EExp (ECons (VVal (VLit (Integer (28)))) (EExp (ECons (VVal (VLit (Integer (61)))) (EExp (ECons (VVal (VLit (Integer (74)))) (EExp (ECons (VVal (VLit (Integer (18)))) (EExp (ECons (VVal (VLit (Integer (92)))) (EExp (ECons (VVal (VLit (Integer (40)))) (EExp (ECons (VVal (VLit (Integer (53)))) (EExp (ECons (VVal (VLit (Integer (59)))) (EExp (ECons (VVal (VLit (Integer (8)))) (VVal VNil))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))) (EExp (EApp (VVal (VFunId (4, 3))) [(VVal (VLit (Integer (500000))));(VVal (VVar 0));(VVal (VLit (Integer (0))))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(1, (EExp (ECase (VVal (VVar 8)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "hipe"%string))) (VVal (VLit (Atom "c"%string))) [(VVal (VLit (Atom "qsort"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "qsort"%string)))])));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(1, (EExp (ECase (VVal (VVar 8)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "qsort"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))] (EApp (VVal (VFunId (4, 1))) [VVal VNil]).


