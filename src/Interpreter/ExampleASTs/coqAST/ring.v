From CoreErlang Require Import Syntax.
Import ListNotations.


Definition testring := ELetRec [(1, (EExp (ECase (VVal (VVar 14)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELetRec [(0, (EExp (ELet 2 (EExp (EPrimOp "recv_peek_message"%string [])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ECase (VVal (VVar 1)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "remove_message"%string [])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 4));(VVal (VVar 0))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "recv_next"%string [])) (EExp (EApp (VVal (VFunId (3, 0))) [])))))])));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EPrimOp "recv_wait_timeout"%string [(VVal (VLit (Atom "infinity"%string)))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "true"%string))));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (3, 0))) [])))])))))])))))] (EExp (EApp (VVal (VFunId (0, 0))) [])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELetRec [(0, (EExp (ELet 2 (EExp (EPrimOp "recv_peek_message"%string [])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ECase (VVal (VVar 1)) [([(PLit (Atom "terminate"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "remove_message"%string [])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 4));(VVal (VLit (Atom "terminate"%string)))])))));([(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "remove_message"%string [])) (EExp (ESeq (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 4));(VVal (VLit (Atom "terminate"%string)))])) (EExp (ELetRec [(0, (EExp (ELet 2 (EExp (EPrimOp "recv_peek_message"%string [])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ECase (VVal (VVar 1)) [([(PLit (Atom "terminate"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "remove_message"%string [])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 6));(VVal (VLit (Atom "done"%string)))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "recv_next"%string [])) (EExp (EApp (VVal (VFunId (3, 0))) [])))))])));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EPrimOp "recv_wait_timeout"%string [(VVal (VLit (Atom "infinity"%string)))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "true"%string))));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (3, 0))) [])))])))))])))))] (EExp (EApp (VVal (VFunId (0, 0))) [])))))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "remove_message"%string [])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ESeq (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 6));(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VVar 5));(VVal (VVar 6))])))))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "recv_next"%string [])) (EExp (EApp (VVal (VFunId (3, 0))) [])))))])));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EPrimOp "recv_wait_timeout"%string [(VVal (VLit (Atom "infinity"%string)))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "true"%string))));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (3, 0))) [])))])))))])))))] (EExp (EApp (VVal (VFunId (0, 0))) [])))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15))])) [([PVar;(PLit (Integer (0)))], (VVal (VLit (Atom "true"%string))), (VVal VNil));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "spawn"%string))) [(VVal (VLit (Atom "ring"%string)));(VVal (VLit (Atom "process"%string)));(EExp (ECons (VVal (VVar 0)) (VVal VNil)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 2));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 2));(VVal (VVar 0))])) (EExp (ECons (VVal (VVar 2)) (VVal (VVar 0)))))))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 14)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "hd"%string))) [(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 0));(VVal (VVar 1))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15))])) [([PVar;(PCons PVar PNil)], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 1));(VVal (VVar 0))])));([PVar;(PCons PVar PVar)], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "hd"%string))) [(VVal (VVar 2))])) (EExp (ESeq (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 2));(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VVar 1));(VVal (VVar 3))])))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "self"%string))) [])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (5, 2))) [(VVal (VVar 0));(VVal (VVar 1))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (7, 1))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "hd"%string))) [(VVal (VVar 0))])) (EExp (ESeq (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "!"%string))) [(VVal (VVar 0));(VVal (VVar 4))])) (EExp (ELetRec [(0, (EExp (ELet 2 (EExp (EPrimOp "recv_peek_message"%string [])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ECase (VVal (VVar 1)) [([(PLit (Atom "done"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "remove_message"%string [])) (VVal (VLit (Atom "ok"%string))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EPrimOp "recv_next"%string [])) (EExp (EApp (VVal (VFunId (3, 0))) [])))))])));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EPrimOp "recv_wait_timeout"%string [(VVal (VLit (Atom "infinity"%string)))])) (EExp (ECase (VVal (VVar 0)) [([(PLit (Atom "true"%string))], (VVal (VLit (Atom "true"%string))), (VVal (VLit (Atom "true"%string))));([(PLit (Atom "false"%string))], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (3, 0))) [])))])))))])))))] (EExp (EApp (VVal (VFunId (0, 0))) [])))))))))))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(4, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15));(VVal (VVar 16));(VVal (VVar 17))])) [([(PLit (Integer (0)));PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (10, 2))) [(VVal (VVar 3));(VVal (VVar 4))])) (EExp (EApp (VVal (VFunId (12, 4))) [(VVal (VVar 1));(VVal (VVar 0));(VVal (VVar 4));(VVal (VVar 5))])))))));([PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3))]))])))])));
(1, (EExp (ECase (VVal (VVar 14)) [([PNil], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (600))));(VVal (VLit (Integer (100000))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (8, 4))) [(VVal (VLit (Integer (50))));(VVal (VLit (Integer (0))));(VVal (VVar 0));(VVal (VVar 1))])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 14)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "hipe"%string))) (VVal (VLit (Atom "c"%string))) [(VVal (VLit (Atom "ring"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 14));(VVal (VVar 15));(VVal (VVar 16))])) [([PVar;PVar;PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "<"%string))) [(VVal (VVar 0));(VVal (VVar 1))])), (EExp (ESeq (EExp (EApp (VVal (VFunId (11, 2))) [(VVal (VVar 0));(VVal (VVar 2))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (50))))])) (EExp (EApp (VVal (VFunId (14, 3))) [(VVal (VVar 0));(VVal (VVar 2));(VVal (VVar 3))])))))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (11, 2))) [(VVal (VVar 1));(VVal (VVar 2))])));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (10))));(VVal (VLit (Integer (1000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (10))));(VVal (VLit (Integer (10000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (10))));(VVal (VLit (Integer (100000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (50))));(VVal (VLit (Integer (100000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (100))));(VVal (VLit (Integer (100000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (500))));(VVal (VLit (Integer (100000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (1000))));(VVal (VLit (Integer (100000))))])) (EExp (ESeq (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (5000))));(VVal (VLit (Integer (100000))))])) (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VLit (Integer (10000))));(VVal (VLit (Integer (100000))))])))))))))))))))))));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "ring"%string)))])));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(1, (EExp (ECase (VVal (VVar 14)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "ring"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))] (EApp (VVal (VFunId (7, 1))) [VVal VNil]).


