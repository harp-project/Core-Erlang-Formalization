From CoreErlang Require Import Syntax.
Import ListNotations.


Definition testzip_nnc := ELetRec [(1, (EExp (ECase (VVal (VVar 16)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EFun 1 (EExp (ECase (VVal (VVar 0)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "bsl"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))) (EExp (ELet 1 (EExp (EFun 2 (EExp (ECase (EExp (EValues [(VVal (VVar 0));(VVal (VVar 1))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "*"%string))) [(VVal (VVar 0));(VVal (VVar 1))])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])))) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VLit (Integer (1))));(VVal (VVar 2))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (11, 2))) [(VVal (VVar 3));(VVal (VLit (Integer (42))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "lists"%string))) (VVal (VLit (Atom "zipwith"%string))) [(VVal (VVar 2));(VVal (VVar 1));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "lists"%string))) (VVal (VLit (Atom "map"%string))) [(VVal (VVar 4));(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (8, 1))) [(VVal (VVar 0))])))))))))))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (3, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PNil;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([(PCons PVar PVar);PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VVar 2))])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 2));(VVal (VVar 0))])))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (6, 3))) [(VVal (VVar 0));(VVal (VVar 1));(VVal VNil)])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;PVar;PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "=:="%string))) [(VVal (VVar 1));(VVal (VVar 0))])), (EExp (EApp (VVal (VFunId (8, 1))) [(EExp (ECons (VVal (VVar 0)) (VVal (VVar 2))))])));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (8, 3))) [(VVal (VVar 0));(VVal (VVar 2));(EExp (ECons (VVal (VVar 1)) (VVal (VVar 3))))])))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (7, 2))) [(VVal (VVar 0));(VVal VNil)])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PNil;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([(PCons PVar PVar);PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (9, 2))) [(VVal (VVar 1));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 2))))])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (10, 3))) [(VVal (VVar 0));(VVal (VVar 1));(VVal VNil)])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([(PLit (Integer (0)));PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 1)));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (12, 3))) [(VVal (VVar 0));(VVal (VVar 2));(EExp (ECons (VVal (VVar 2)) (VVal (VVar 3))))])))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (13, 4))) [(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal VNil)])));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(4, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19))])) [([PVar;PNil;PNil;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (7, 1))) [(VVal (VVar 1))])));([PVar;(PCons PVar PVar);(PCons PVar PVar);PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VVar 0)) [(VVal (VVar 1));(VVal (VVar 3))])) (EExp (EApp (VVal (VFunId (17, 4))) [(VVal (VVar 1));(VVal (VVar 3));(VVal (VVar 5));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 6))))])))));([PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([(PLit (Integer (0)));PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (3, 1))) [(VVal (VLit (Integer (10000000))))])) (EExp (EApp (VVal (VFunId (15, 2))) [(VVal (VVar 1));(VVal (VVar 0))])))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PNil], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (11, 2))) [(VVal (VLit (Integer (1))));(VVal (VLit (Integer (0))))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "hipe"%string))) (VVal (VLit (Atom "c"%string))) [(VVal (VLit (Atom "zip_nnc"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "zip_nnc"%string)))])));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "zip_nnc"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))] (EApp (VVal (VFunId (12, 1))) [VVal VNil]).


