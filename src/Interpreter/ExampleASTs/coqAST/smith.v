From CoreErlang Require Import Syntax.
Import ListNotations.


Definition testsmith := ELetRec [(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 2))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ECase (EExp (EValues [])) [([], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom ">"%string))) [(VVal (VVar 0));(VVal (VVar 1))])), (VVal (VVar 0)));([], (VVal (VLit (Atom "true"%string))), (VVal (VVar 1)));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(VVal (VLit (Atom "if_clause"%string)))])))])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 2))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (4))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 2));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (4, 2))) [(VVal (VVar 1));(VVal (VVar 0))])))))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PVar;PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])), (EExp (ECase (EExp (EValues [])) [([], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "=:="%string))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])), (VVal VNil));([], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "rem"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (10))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "*"%string))) [(VVal (VVar 3));(VVal (VLit (Integer (11))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1237501))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "rem"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (10067))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (9, 2))) [(VVal (VVar 3));(VVal (VVar 0))])) (EExp (ECons (VVal (VVar 5)) (VVal (VVar 0)))))))))))))))));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(VVal (VLit (Atom "if_clause"%string)))])))])));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([(PLit (Integer (0)));PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal VNil));([PVar;PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 2))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (5, 2))) [(VVal (VVar 1));(VVal (VVar 2))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 1));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 4));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (9, 3))) [(VVal (VVar 1));(VVal (VVar 4));(VVal (VVar 0))])) (EExp (ECons (VVal (VVar 3)) (VVal (VVar 0)))))))))))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(5, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19));(VVal (VVar 20))])) [([PVar;PVar;PVar;PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 2))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 4))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (1))));(VVal (VVar 5))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VVar 1));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 6))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (2))));(VVal (VVar 7))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (11, 2))) [(VVal (VVar 1));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECase (EExp (EValues [])) [([], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "=:="%string))) [(VVal (VVar 6));(VVal (VVar 7))])), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 8))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (13, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (14, 2))) [(VVal (VVar 3));(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (15, 2))) [(VVal (VVar 7));(VVal (VVar 0))])))))))))));([], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (3))));(VVal (VVar 8))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (12, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (13, 2))) [(VVal (VVar 2));(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (14, 2))) [(VVal (VVar 6));(VVal (VVar 0))])))))))));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(VVal (VLit (Atom "if_clause"%string)))])))])) (EExp (ELet 1 (VVal (VVar 0)) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 12))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 12))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 12))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (16, 2))) [(VVal (VVar 1));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (17, 2))) [(VVal (VVar 3));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (18, 2))) [(VVal (VVar 5));(VVal (VVar 0))])) (EExp (ETuple [(VVal (VVar 11));(VVal (VVar 8));(VVal (VVar 6));(VVal (VVar 0))])))))))))))))))))))))))))))))));([PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 4))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;PVar;(PTuple [PVar;PVar;PVar;PVar])], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 2))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (7, 2))) [(VVal (VVar 4));(VVal (VVar 2))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 2));(VVal (VVar 1))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "abs"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VLit (Integer (1))));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (10, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 6));(VVal (VVar 5))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "abs"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VLit (Integer (1))));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (14, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (15, 2))) [(VVal (VVar 8));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (16, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (17, 2))) [(VVal (VVar 16));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (18, 2))) [(VVal (VVar 0));(VVal (VLit (Integer (0))))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VLit (Integer (1))))])) (EExp (ETuple [(VVal (VVar 13));(VVal (VVar 0));(VVal (VVar 3));(VVal (VVar 1))])))))))))))))))))))))))))))))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(5, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19));(VVal (VVar 20))])) [([PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (12, 7))) [(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 4));(VVal VNil);(VVal (VLit (Atom "none"%string)))])));([PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 4))]))])))])));
(7, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19));(VVal (VVar 20));(VVal (VVar 21));(VVal (VVar 22))])) [([(PCons PVar PVar);PVar;(PCons PVar PVar);PVar;PVar;PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 3))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (13, 5))) [(VVal (VVar 0));(VVal (VVar 2));(VVal (VVar 5));(VVal (VVar 3));(VVal (VVar 6))])) (EExp (EApp (VVal (VFunId (17, 7))) [(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 5));(VVal (VVar 4));(VVal (VVar 0));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 8))));(VVal (VVar 0))])))));([(PCons PVar PVar);PVar;(PLit (Atom "none"%string));PVar;PVar;PVar;PVar], (EExp (ETry (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 3))])) (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "and"%string))) [(VVal (VVar 1));(VVal (VVar 0))])))))) 1 (VVal (VVar 0)) 2 (VVal (VLit (Atom "false"%string))))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (12, 3))) [(VVal (VVar 0));(VVal (VVar 2));(VVal (VVar 4))])) (EExp (EApp (VVal (VFunId (15, 7))) [(VVal (VVar 2));(VVal (VVar 3));(VVal (VLit (Atom "none"%string)));(VVal (VVar 4));(VVal (VVar 0));(EExp (ECons (VVal (VVar 0)) (VVal (VVar 6))));(VVal (VVar 0))])))));([PNil;PVar;PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ETuple [(VVal (VVar 4));(VVal (VVar 5))])));([PVar;PVar;PVar;PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3));(VVal (VVar 4));(VVal (VVar 5));(VVal (VVar 6))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (12, 4))) [(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VLit (Atom "none"%string)))])));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(4, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19))])) [([(PCons PVar PVar);PVar;PVar;PVar], (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "is_integer"%string))) [(VVal (VVar 0))])), (EExp (ECase (EExp (EApp (VVal (VFunId (11, 5))) [(VVal (VVar 2));(VVal (VVar 0));(VVal (VVar 3));(EExp (ETuple [(VVal (VLit (Integer (0))));(VVal (VLit (Integer (0))));(VVal (VLit (Integer (0))));(VVal (VLit (Integer (0))))]));(EExp (ETuple [(VVal (VLit (Integer (0))));(VVal (VLit (Integer (0))));(VVal (VLit (Integer (0))));(VVal (VLit (Integer (0))))]))])) [([(PTuple [PVar;PVar])], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (16, 4))) [(VVal (VVar 3));(VVal (VVar 4));(VVal (VVar 0));(VVal (VVar 1))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "badmatch"%string)));(VVal (VVar 0))]))])))])));([PNil;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 2)));([PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17))])) [([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VLit (Integer (9999999))))])) (EExp (EApp (VVal (VFunId (14, 3))) [(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 0))])))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18))])) [([(PCons PVar PVar);PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (12, 3))) [(VVal (VVar 0));(VVal (VVar 2));(VVal (VLit (Atom "none"%string)))])) (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "element"%string))) [(VVal (VLit (Integer (4))));(VVal (VVar 0))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 5));(VVal (VVar 0))])) (EExp (EApp (VVal (VFunId (18, 3))) [(VVal (VVar 4));(VVal (VVar 5));(VVal (VVar 0))])))))))));([PNil;PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 1)));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(4, (EExp (ECase (EExp (EValues [(VVal (VVar 16));(VVal (VVar 17));(VVal (VVar 18));(VVal (VVar 19))])) [([(PLit (Integer (0)));PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 2)));([PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (15, 2))) [(VVal (VVar 2));(VVal (VVar 3))])) (EExp (EApp (VVal (VFunId (18, 4))) [(VVal (VVar 1));(VVal (VVar 3));(VVal (VVar 4));(VVal (VVar 0))])))))));([PVar;PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2));(VVal (VVar 3))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PNil], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (3, 3))) [(VVal (VLit (Integer (200))));(VVal (VLit (Integer (64))));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (3, 2))) [(VVal (VLit (Integer (64))));(VVal (VLit (Integer (0))))])) (EExp (EApp (VVal (VFunId (14, 4))) [(VVal (VLit (Integer (30))));(VVal (VVar 1));(VVal (VVar 0));(VVal (VLit (Integer (0))))])))))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "smith"%string)))])));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(1, (EExp (ECase (VVal (VVar 16)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "smith"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))] (EApp (VVal (VFunId (13, 1))) [VVal VNil]).


