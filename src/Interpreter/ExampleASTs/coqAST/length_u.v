From CoreErlang Require Import Syntax.
Import ListNotations.


Definition testlength_u := ELetRec [(1, (EExp (ECase (VVal (VVar 9)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (2, 2))) [(VVal (VLit (Integer (0))));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 9));(VVal (VVar 10))])) [([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar)))))))))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (11))))])) (EExp (EApp (VVal (VFunId (15, 2))) [(VVal (VVar 0));(VVal (VVar 13))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar))))))))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (10))))])) (EExp (EApp (VVal (VFunId (14, 2))) [(VVal (VVar 0));(VVal (VVar 12))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar)))))))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (9))))])) (EExp (EApp (VVal (VFunId (13, 2))) [(VVal (VVar 0));(VVal (VVar 11))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar))))))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (8))))])) (EExp (EApp (VVal (VFunId (12, 2))) [(VVal (VVar 0));(VVal (VVar 10))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar)))))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (7))))])) (EExp (EApp (VVal (VFunId (11, 2))) [(VVal (VVar 0));(VVal (VVar 9))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar))))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (6))))])) (EExp (EApp (VVal (VFunId (10, 2))) [(VVal (VVar 0));(VVal (VVar 8))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar)))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (5))))])) (EExp (EApp (VVal (VFunId (9, 2))) [(VVal (VVar 0));(VVal (VVar 7))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar (PCons PVar PVar))))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (4))))])) (EExp (EApp (VVal (VFunId (8, 2))) [(VVal (VVar 0));(VVal (VVar 6))])))));([PVar;(PCons PVar (PCons PVar (PCons PVar PVar)))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (3))))])) (EExp (EApp (VVal (VFunId (7, 2))) [(VVal (VVar 0));(VVal (VVar 5))])))));([PVar;(PCons PVar (PCons PVar PVar))], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (2))))])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 0));(VVal (VVar 4))])))));([PVar;(PCons PVar PVar)], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "+"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (5, 2))) [(VVal (VVar 0));(VVal (VVar 3))])))));([PVar;PNil], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(1, (EExp (ECase (VVal (VVar 9)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EApp (VVal (VFunId (4, 2))) [(VVal (VVar 0));(VVal VNil)])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(2, (EExp (ECase (EExp (EValues [(VVal (VVar 9));(VVal (VVar 10))])) [([(PLit (Integer (0)));PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 0)));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (EApp (VVal (VFunId (6, 2))) [(VVal (VVar 0));(EExp (ECons (VVal (VLit (Integer (0)))) (VVal (VVar 2))))])))));([PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1))]))])))])));
(3, (EExp (ECase (EExp (EValues [(VVal (VVar 9));(VVal (VVar 10));(VVal (VVar 11))])) [([(PLit (Integer (0)));PVar;PVar], (VVal (VLit (Atom "true"%string))), (VVal (VVar 1)));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "-"%string))) [(VVal (VVar 0));(VVal (VLit (Integer (1))))])) (EExp (ELet 1 (EExp (EApp (VVal (VFunId (4, 1))) [(VVal (VVar 2))])) (EExp (EApp (VVal (VFunId (9, 3))) [(VVal (VVar 1));(VVal (VVar 3));(VVal (VVar 0))])))))));([PVar;PVar;PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0));(VVal (VVar 1));(VVal (VVar 2))]))])))])));
(1, (EExp (ECase (VVal (VVar 9)) [([PNil], (VVal (VLit (Atom "true"%string))), (EExp (ELet 1 (EExp (EApp (VVal (VFunId (2, 1))) [(VVal (VLit (Integer (20000))))])) (EExp (EApp (VVal (VFunId (5, 3))) [(VVal (VLit (Integer (50000))));(VVal (VVar 0));(VVal (VLit (Integer (0))))])))));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(1, (EExp (ECase (VVal (VVar 9)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "hipe"%string))) (VVal (VLit (Atom "c"%string))) [(VVal (VLit (Atom "length_u"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])));
(0, (EExp (ECase (EExp (EValues [])) [([], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "length_u"%string)))])));([], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)))]))])))])));
(1, (EExp (ECase (VVal (VVar 9)) [([PVar], (VVal (VLit (Atom "true"%string))), (EExp (ECall (VVal (VLit (Atom "erlang"%string))) (VVal (VLit (Atom "get_module_info"%string))) [(VVal (VLit (Atom "length_u"%string)));(VVal (VVar 0))])));([PVar], (VVal (VLit (Atom "true"%string))), (EExp (EPrimOp "match_fail"%string [(EExp (ETuple [(VVal (VLit (Atom "function_clause"%string)));(VVal (VVar 0))]))])))])))] (EApp (VVal (VFunId (5, 1))) [VVal VNil]).


