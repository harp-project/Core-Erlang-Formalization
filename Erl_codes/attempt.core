module 'attempt' ['f1'/1,
		  'f10'/1,
		  'f11'/1,
		  'f12'/1,
		  'f13'/1,
		  'f14'/2,
		  'f15'/1,
		  'f16'/1,
		  'f17'/1,
		  'f2'/1,
		  'f3'/1,
		  'f4'/1,
		  'f5'/1,
		  'f6'/1,
		  'f7'/1,
		  'f8'/1,
		  'f9'/1,
		  'g1'/1,
		  'g2'/1,
		  'module_info'/0,
		  'module_info'/1]
    attributes [%% Line 1
		'file' =
		    %% Line 1
		    [{[97|[116|[116|[101|[109|[112|[116|[46|[101|[114|[108]]]]]]]]]]],1}],
		%% Line 2
		'compile' =
		    %% Line 2
		    ['export_all']]
'f1'/1 =
    %% Line 4
    fun (_0) ->
	call 'erlang':'and'
	    (_0, 5)
'g1'/1 =
    %% Line 5
    fun (_0) ->
	call 'erlang':'or'
	    (_0, 5)
'f2'/1 =
    %% Line 6
    fun (_0) ->
	( case _0 of
	    ( <( 'true'
		 -| ['compiler_generated'] )> when 'true' ->
		  5
	      -| ['compiler_generated'] )
	    ( <( 'false'
		 -| ['compiler_generated'] )> when 'true' ->
		  'false'
	      -| ['compiler_generated'] )
	    ( <_1> when 'true' ->
		  ( call ( 'erlang'
			   -| ['compiler_generated'] ):( 'error'
							 -| ['compiler_generated'] )
			(( {( 'badarg'
			      -| ['compiler_generated'] ),_1}
			   -| ['compiler_generated'] ))
		    -| ['compiler_generated'] )
	      -| ['compiler_generated'] )
	  end
	  -| ['compiler_generated'] )
'g2'/1 =
    %% Line 7
    fun (_0) ->
	call 'erlang':'-'
	    (_0, 3)
'f3'/1 =
    %% Line 8
    fun (_0) ->
	call 'erlang':'not'
	    (_0)
'f4'/1 =
    %% Line 9
    fun (_0) ->
	call 'erlang':'++'
	    (_0, [3|[4]])
'f5'/1 =
    %% Line 10
    fun (_0) ->
	call 'erlang':'--'
	    (_0, [1|[2]])
'f6'/1 =
    %% Line 11
    fun (_0) ->
	call 'erlang':'tuple_to_list'
	    (_0)
'f7'/1 =
    %% Line 12
    fun (_0) ->
	call 'erlang':'list_to_tuple'
	    (_0)
'f8'/1 =
    %% Line 13
    fun (_0) ->
	call 'erlang':'=='
	    (_0, 5)
'f9'/1 =
    %% Line 14
    fun (_0) ->
	call 'erlang':'/='
	    (_0, 5)
'f10'/1 =
    %% Line 15
    fun (_0) ->
	call 'erlang':'=/='
	    (_0, 5)
'f11'/1 =
    %% Line 16
    fun (_0) ->
	call 'erlang':'=:='
	    (_0, 5)
'f12'/1 =
    %% Line 17
    fun (_0) ->
	let <X> =
	    [99|[105|[99|[97|_0]]]]
	in  %% Line 18
	    call 'io':'fwrite'
		(X)
'f13'/1 =
    %% Line 19
    fun (_0) ->
	%% Line 20
	case _0 of
	  %% Line 21
	  <~{1:=2,2:=3}~> when 'true' ->
	      1
	  %% Line 22
	  <Z> when 'true' ->
	      2
	end
'f14'/2 =
    %% Line 25
    fun (_0,_1) ->
	do  call 'erlang':'rem'
		(_0, _1)
	    call 'erlang':'div'
		(_0, _1)
'f15'/1 =
    %% Line 26
    fun (_0) ->
	call 'erlang':'tuple_size'
	    (_0)
'f16'/1 =
    %% Line 27
    fun (_0) ->
	call 'erlang':'length'
	    (_0)
'f17'/1 =
    %% Line 28
    fun (_0) ->
	call 'erlang':'hd'
	    (_0)
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('attempt')
'module_info'/1 =
    fun (_0) ->
	call 'erlang':'get_module_info'
	    ('attempt', _0)
end